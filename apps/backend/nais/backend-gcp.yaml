apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: etterlevelse-backend
  namespace: teamdatajegerne
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100M
  labels:
    team: teamdatajegerne
spec:
  image: {{image}}
  port: 8080
  azure:
    application:
      enabled: true
      tenant: nav.no
      claims:
        extra:
          - NAVident
        groups:
          - id: "7d275d5e-59a5-473d-b530-a9091b3de4c6"
          - id: "bf05a29f-6f80-4da1-b419-22c802fd41e7"
          - id: "d99d875c-c028-46a4-94bc-a87a633b3eee"
          - id: "1e0cb856-a8ba-4294-aab3-8162e3ebe1ea"
      replyURLs:
      {{#each replies as |url|}}
         - {{url}}
      {{/each}}
  tokenx:
    enabled: true
  ingresses:
  {{#each ingresses as |url|}}
    - {{url}}
  {{/each}}
  replicas:
    min: 2
    max: 6
    cpuThresholdPercentage: 50
  resources:
    limits:
      memory: 10Gi
    requests:
      cpu: 1000m
      memory: 8Gi
  liveness:
    path: internal/isAlive
    initialDelay: 10
    periodSeconds: 5
    failureThreshold: 30
  readiness:
    path: internal/isReady
    initialDelay: 10
    periodSeconds: 5
    failureThreshold: 30
  prometheus:
    enabled: true
    path: /internal/metrics
  envFrom:
    - secret: etterlevelse-secrets
  env:
  {{#each env}}
    - name: {{this.name}}
      value: {{this.value}}
  {{/each}}

  gcp:
    sqlInstances:
      - name: etterlevelse
        type: POSTGRES_16
        tier: db-custom-1-3840
        databases:
          - name: etterlevelsedb
            envVarPrefix: DB
  accessPolicy:
    inbound:
      rules:
        - application: etterlevelse-frontend
        - application: etterlevelse-arkiv
          cluster: prod-legacy
          permissions:
            roles:
              - "arkiv-admin"
    outbound:
      rules:
        - application: behandlingskatalog-backend
      external:
        - host: {{teamcat_ingress}}
        - host: {{p360_ingress}}
        - host: slack.com
