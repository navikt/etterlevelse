type Krav {
    id: ID!
    changeStamp: ChangeStamp!
    version: Int!

    kravNummer: Int!
    kravVersjon: Int!
    navn: String!
    beskrivelse: String
    utdypendeBeskrivelse: String
    dokumentasjon: [String!]!
    implementasjoner: [String!]!
    begreper: [String!]!
    kontaktPersoner: [String!]!
    rettskilder: [String!]!
    tagger: [String!]!
    periode: Periode

    avdeling: Code
    underavdeling: Code
    relevansFor: [Code!]!
    status: KravStatus!

    etterlevelser(onlyForBehandling: Boolean): [Etterlevelse!]!
    kontaktPersonerData: [Resource!]!
}

enum KravStatus {
    UNDER_REDIGERING,
    FERDIG
}

type Etterlevelse {
    id: ID!
    changeStamp: ChangeStamp!
    version: Int!

    behandlingId: String!
    behandling: Behandling!
    kravNummer: Int!
    kravVersjon: Int!

    etterleves: Boolean
    begrunnelse: String
    dokumentasjon: [String!]!
    fristForFerdigstillelse: Date
    status: EtterlevelseStatus
}

enum EtterlevelseStatus {
    UNDER_REDIGERING,
    FERDIG
}

type Behandling {
    id: String!
    navn: String!
    nummer: Int!

    overordnetFormaal: ExternalCode!
    formaal: String

    avdeling: ExternalCode
    linjer: [ExternalCode!]!
    systemer: [ExternalCode!]!
    teams: [String!]!
    teamsData: [Team!]!

    relevansFor: [Code!]!

}

type Resource {
    navIdent: String!
    givenName: String
    familyName: String
    fullName: String
    email: String
    resourceType: ResourceType
}

enum ResourceType {
    INTERNAL
    EXTERNAL
}

type Team {
    id: String!
    name: String!
    description: String
    slackChannel: String
    productAreaId: String
    tags: [String!]!
    members: [Member!]!
}

# Todo cleanup member vs resource
# Todo cleanup TeamRESPONSE but not ResourceRESPONSE
type Member {
    navIdent: String!
    name: String
    email: String
}

type Periode {
    start: Date
    slutt: Date
}

type ChangeStamp {
    lastModifiedBy: String!
    lastModifiedDate: DateTime!
}

type Code {
    list: ListName!
    code: String!
    shortName: String!
    description: String
    invalidCode: Boolean
}

type ExternalCode {
    list: String!
    code: String!
    shortName: String!
    description: String
    external: Boolean
}

enum ListName {
    RELEVANS
    AVDELING
    UNDERAVDELING
}

type BehandlingPage {
    pageNumber: Int!
    pageSize: Int!
    pages: Int!
    numberOfElements: Int!
    totalElements: Int!
    paged: Boolean
    content: [Behandling!]!
}